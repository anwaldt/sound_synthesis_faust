.. title: Faust: Controlling Parameters
.. slug: faust-controlling-parameters
.. date: 2020-04-21 17:27:28 UTC
.. tags:
.. category: faust:basics
.. link:
.. description:
.. type: text
.. priority: 0

In Faust, control parameters are always declared with a graphic user interface element.
For some targets, these elements are ignored. For GUI targets, however, they are automatically
included in the final software. With the native Faust GUI, as used in standalone applications,
an example with two parameters may look like this:

.. raw:: html

  <h1 align="center">
   <img width="300" src="/images/faust/sine_example_gui.png" alt="text">
  </h1>


-----

This example implements a sine wave generator with controllable frequency and amplitude.
The following image shows the top level flow chart generated by Faust:

.. raw:: html

  <h1 align="center">
   <img width="500" src="/images/faust/sine_example.svg" alt="text">
  </h1>


-----

The frequency of the oscillator is controlled with a horizontal slider, whereas the element for controlling the gain is in knob style. Additional parameters (see the `Faust documentation <https://faustdoc.grame.fr/manual/syntax/#hslider-primitive>`_ for details) define parameter ranges, initial value more.

`Load this example in the Faust online IDE <https://faustide.grame.fr/?code=https://raw.githubusercontent.com/anwaldt/sound_synthesis_faust/main/faust/Basics/sine.dsp>`_ for a quick start:


.. code-block:: cpp

   import("stdfaust.lib");

   // input parameters with GUI elements
   freq  = hslider("frequency",100, 10, 1000, 0.001);
   gain  = hslider("gain[style:knob]",0, 0, 1, 0.001);

   // a sine oscillator with controllable frequency and amplitude:
   process = os.osc(freq)*gain;
